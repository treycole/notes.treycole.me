import { Filter } from 'pixi.js/lib/filters/Filter';
import type { Texture } from 'pixi.js/lib/rendering/renderers/shared/texture/Texture';
import type { Sprite } from 'pixi.js/lib/scene/sprite/Sprite';
import type { FilterOptions } from 'pixi.js/lib/filters/Filter';
import type { FilterSystem } from 'pixi.js/lib/filters/FilterSystem';
export interface MaskFilterOptions extends FilterOptions {
    sprite: Sprite;
    inverse?: boolean;
    scale?: number | {
        x: number;
        y: number;
    };
}
export declare class MaskFilter extends Filter {
    sprite: Sprite;
    private readonly _textureMatrix;
    constructor(options: MaskFilterOptions);
    set inverse(value: boolean);
    get inverse(): boolean;
    apply(filterManager: FilterSystem, input: Texture, output: Texture, clearMode: boolean): void;
}
